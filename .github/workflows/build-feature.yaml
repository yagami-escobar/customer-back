name: Build-Feature 
run-name: Runner Build-Feature
on:
  pull_request:
    branches: ['develop']
    types: ['opened', 'reopened']
    paths: ['**/*']
  # push:
  #   branches: ['feature/*']
  #   paths: ['**/*']
  # workflow_dispatch:
  #   inputs:
      
        
jobs:
  job-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # download code branch source -> descarga el codigo de la rama que disparo el prr.
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4.5.0
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with: 
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with maven
        run: |
          mvn clean test package
          echo "Build with maven!"


  job-merge: # descarga el codigo de la base branch, e integra los cambios(merge, push) en la base branch.
    runs-on: ubuntu-latest
    needs: job-build  # necesita o depende de otro job.
    if: ${{ success() }}  # solo se va ejecutar si el job anterior se ejecuto con exito
    permissions:
      contents: write # sobre el contenido se pueda escribir.
      pull-requests: write  # sobre el pr se puede escribir.
    steps:
      - name: Checkout code # lo que hace disponibilizar todo mi codigo en el runner
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}  # download code branch base y se posiciona en el (develop) (target branch)
          fetch-depth: 0
      
      - name: Merge to develop branch
        if: success() # si todo lo anterior tuvo exito
        run: |
          git config --global user.name "WF-USER"
          git config --global user.email "EMAIL-OF-WF@USER"
          git merge --no-ff --verbose origin/${{ github.event.pull_request.head.ref }} -m "Merge PR #${{ github.event.number }}"
      
      - name: Push changes after merge
        if: ${{ success() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }} # token de caracter temporal
          branch: ${{ github.base_ref }}

      - name: Trigger Wf Artifact
        if: ${{ success() }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: ${{ github.repository }}
          event-type: psh-event-art
          client-payload: '{ "base_branch": "${{ github.base_ref}}" }' # payload(json) que se envia al otro wf.

            


